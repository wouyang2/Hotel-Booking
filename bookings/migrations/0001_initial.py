# Generated by Django 5.0.2 on 2025-10-21 22:32

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("hotels", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "booking_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("check_in_date", models.DateField(auto_now=True)),
                ("check_out_date", models.DateField(auto_now=True)),
                ("num_of_children", models.PositiveSmallIntegerField()),
                ("num_of_adults", models.PositiveSmallIntegerField()),
                ("total_price", models.IntegerField()),
                (
                    "bookingstatus",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Comfirmation"),
                            ("CONFIRMED", "BOOKING COMFIRMED"),
                            ("CHECKED IN", "Checked In"),
                            ("CHECKED OUT", "Checked Out"),
                            ("CANCELLED", "Booking Cancelled"),
                        ],
                        default="PENDING",
                        help_text="current status of booking process",
                        max_length=15,
                    ),
                ),
                ("specia_request", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "to_hotel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hotel_booking",
                        to="hotels.hotel",
                    ),
                ),
                (
                    "to_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_booking",
                        to="accounts.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("CC", "Credit Card"),
                            ("DC", "Debit Card"),
                            ("PP", "PayPal"),
                            ("CASH", "Cash"),
                            ("GC", "Guest Checkout"),
                        ],
                        default="CC",
                        help_text="how customer are going to pay",
                        max_length=4,
                    ),
                ),
                (
                    "payment_transaction_id",
                    models.CharField(max_length=100, unique=255),
                ),
                (
                    "payment_status",
                    models.TextField(
                        choices=[
                            ("Payment Pending", "Pending"),
                            ("Payment Completed ", "Completed"),
                            ("Payment Failed", "Failed"),
                            ("Payment Refunded", "Refunded"),
                        ],
                        default="Payment Pending",
                        help_text="current status of payment",
                    ),
                ),
                ("payment_time", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="bookings.booking",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                ("title", models.TextField(max_length=255)),
                ("comment", models.TextField(blank=True, max_length=255, null=True)),
                (
                    "cleaning_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="optional cleaning reating",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "location_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="optional location reating",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "service_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="optional service reating",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "value_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="optional value reating",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "is_stayed",
                    models.BooleanField(
                        default=True,
                        help_text="Verification flag (true if user actually stayed)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.OneToOneField(
                        help_text="optional link to booking, do not know what for",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="booking_review",
                        to="bookings.booking",
                    ),
                ),
                (
                    "hotel",
                    models.ForeignKey(
                        help_text="review to hotel maybe",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hotel_review",
                        to="hotels.hotel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="review written by users maybe",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_review",
                        to="accounts.user",
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "booking")},
            },
        ),
    ]
